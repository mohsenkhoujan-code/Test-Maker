# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'NamedProject_Guessy.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

Name = ['Back']
class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(792, 498)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(220, 10, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(270, 10, 201, 31))
        self.lineEdit.setInputMask("")
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(490, 10, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(540, 10, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(10, 10, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit_3 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_3.setGeometry(QtCore.QRect(80, 10, 113, 22))
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_3.setReadOnly(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(0, 80, 791, 411))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_4.setGeometry(QtCore.QRect(40, 340, 721, 41))
        self.lineEdit_4.setReadOnly(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setGeometry(QtCore.QRect(10, 10, 771, 111))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.link = QtWidgets.QLabel(self.frame)
        self.link.setGeometry(QtCore.QRect(30, 140, 221, 181))
        self.link.setText("")
        self.link.setObjectName("link")
        self.checkBox = QtWidgets.QCheckBox(self.frame)
        self.checkBox.setGeometry(QtCore.QRect(70, 350, 81, 20))
        self.checkBox.setAutoExclusive(True)
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.frame)
        self.checkBox_2.setGeometry(QtCore.QRect(660, 350, 81, 20))
        self.checkBox_2.setAutoExclusive(True)
        self.checkBox_2.setObjectName("checkBox_2")
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setGeometry(QtCore.QRect(660, 300, 93, 28))
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", Name[0]))
        self.label.setText(_translate("Dialog", "type:"))
        self.lineEdit.setText(_translate("Dialog", "True or False"))
        self.label_2.setText(_translate("Dialog", "scorr:"))
        self.lineEdit_2.setText(_translate("Dialog", "0"))
        self.label_3.setText(_translate("Dialog", "number:"))
        self.lineEdit_3.setText(_translate("Dialog", "1"))
        self.textEdit.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">a qustion</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p></body></html>"))
        self.checkBox.setText(_translate("Dialog", "True"))
        self.checkBox_2.setText(_translate("Dialog", "False"))
        self.pushButton.setText(_translate("Dialog", "Next"))
        self.Sc = 0
        self.Nu = 1
        self.Truler = []
        self.Falser = []
        self.Cond = []
        self.quss = []
        self.pushButton.clicked.connect(self.next_)
        self.film = ''
        self.Name = []
        self.checkBox.clicked.connect(self.ot)
        self.checkBox_2.clicked.connect(self.of)
    def map_str(self,info:list):
        self.info = info
       
        
    def maps(self):
        try:
            self.scorr = self.info[1]
            self.lineEdit_2.setText(self.scorr)
            que = self.info[2]
            self.que = que
            self.textEdit.setPlainText(que)
            self.ans = self.info[3]
            print(self.ans)
            self.carncy = self.ans
            
            image = self.info[4]
            print(image.split('--'),'===========================**')
            adr,mx,my,sx,sy = image.split('--')
            self.link.clear()
            if adr != '':
                soho = QtGui.QPixmap(adr)
                mx,my = int(mx),int(my)
                sx,sy = int(sx),int(sy)
                self.link.setPixmap(soho)
                self.link.move(mx,my)
                self.link.resize(sx,sy)
                self.link.setScaledContents(True)
        except:
            try:
                from Karname import Ui_Dialog
                samdi = Ui_Dialog()
                diaKaR = QtWidgets.QDialog()
                samdi.setupUi(diaKaR)
                diaKaR.setWindowTitle(Name[0])
                quss = []
                quss.extend(self.Truler)
                quss.extend(self.Falser)
                Nq = len(quss)
                ca = len(self.Truler)
                SumScorrDarsad = ca * 100 / Nq
                samdi.args(Trues = self.Truler, Falses = self.Falser, SumScorr = self.Sc, SumScorrDarsad = SumScorrDarsad,Nt = len(self.Truler), Nf = len(self.Falser), type_ = 'Test', Quss = quss)
                diaKaR.exec_()
            except:
                 from Out import Ui_Dialog
                 ic = Ui_Dialog()
                 diaer = QtWidgets.QDialog()
                 ic.setupUi(diaer)
                 ic.label.setText('Erorr:Erorr in analisys data')
                 ic.pushButton.clicked.connect(diaer.close)
                 diaer.exec_()
    def ot(self):
        self.film = 'True'
    def of(self):
        self.film = 'False'
    def next_(self):
        try:
            nq = []
            nq.extend(self.Truler)
            nq.extend(self.Falser)
            self.lineEdit_3.setText(str(len(nq)))
            newAns = self.lineEdit_4.text()
            
            
                    
                    
            
            if self.film == self.ans:
                self.Truler.append(self.que)
                self.Sc += float(self.scorr)
                self.Cond.append('True')
            else:
                self.Falser.append(self.que)
                self.Cond.append('False')
            self.info = self.info[6:]
            self.maps()
            print(self.Truler)
            print(self.Falser)
            print(self.Sc)
            print(self.Cond)
        except:
            from Out import Ui_Dialog
            ic = Ui_Dialog()
            diaer = QtWidgets.QDialog()
            ic.setupUi(diaer)
            ic.label.setText('Erorr:Erorr in Press "Next"')
            ic.pushButton.clicked.connect(diaer.close)
            diaer.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
