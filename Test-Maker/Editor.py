# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Editor.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from brahan import brahan

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1261, 866)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 249, 229))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 163, 135))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 249, 229))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 249, 229))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 163, 135))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 249, 229))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 249, 229))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 163, 135))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 122, 101))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 244, 203))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        Dialog.setPalette(palette)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        self.groupBox_2 = QtWidgets.QGroupBox(Dialog)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 10, 1251, 511))
        self.groupBox_2.setObjectName("groupBox_2")
        self.frame = QtWidgets.QFrame(self.groupBox_2)
        self.frame.setGeometry(QtCore.QRect(20, 40, 631, 441))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.frame.setPalette(palette)
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(self.frame)
        self.plainTextEdit_3.setGeometry(QtCore.QRect(10, 20, 611, 121))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.plainTextEdit_3.setFont(font)
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setGeometry(QtCore.QRect(10, 405, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_8.setGeometry(QtCore.QRect(70, 400, 541, 31))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.radioButton = QtWidgets.QRadioButton(self.frame)
        self.radioButton.setGeometry(QtCore.QRect(80, 400, 95, 20))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.frame)
        self.radioButton_2.setGeometry(QtCore.QRect(200, 400, 95, 20))
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.frame)
        self.radioButton_3.setGeometry(QtCore.QRect(330, 400, 95, 20))
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(self.frame)
        self.radioButton_4.setGeometry(QtCore.QRect(460, 400, 95, 20))
        self.radioButton_4.setObjectName("radioButton_4")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_9.setGeometry(QtCore.QRect(70, 370, 113, 22))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.IMAGE = QtWidgets.QLabel(self.frame)
        self.IMAGE.setGeometry(QtCore.QRect(40, 180, 151, 151))
        self.IMAGE.setText("")
        self.IMAGE.setObjectName("IMAGE")
        self.line_2 = QtWidgets.QFrame(self.groupBox_2)
        self.line_2.setGeometry(QtCore.QRect(653, 10, 20, 501))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit.setGeometry(QtCore.QRect(1040, 30, 181, 22))
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setGeometry(QtCore.QRect(680, 30, 351, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(680, 70, 351, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.nlock = QtWidgets.QLabel('*********')
        self.nlock.move(500,0)
        self.label_3.setGeometry(QtCore.QRect(680, 110, 351, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(680, 150, 351, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_4.setObjectName("label_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(1040, 70, 181, 22))
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(1040, 110, 181, 22))
        self.lineEdit_3.setReadOnly(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(1040, 150, 181, 22))
        self.lineEdit_4.setReadOnly(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.line_3 = QtWidgets.QFrame(self.groupBox_2)
        self.line_3.setGeometry(QtCore.QRect(662, 200, 611, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.groupBox_2)
        self.plainTextEdit.setGeometry(QtCore.QRect(670, 250, 571, 251))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setGeometry(QtCore.QRect(670, 220, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_5.setObjectName("label_5")
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setGeometry(QtCore.QRect(0, 540, 1251, 321))
        self.groupBox.setObjectName("groupBox")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 20, 701, 261))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.groupBox_3)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(10, 30, 671, 211))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.plainTextEdit_2.setFont(font)
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_4.setGeometry(QtCore.QRect(730, 20, 461, 61))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.checkBox = QtWidgets.QCheckBox(self.groupBox_4)
        self.checkBox.setGeometry(QtCore.QRect(10, 30, 101, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.checkBox.setFont(font)
        self.checkBox.setAutoExclusive(True)
        self.checkBox.setTristate(False)
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.groupBox_4)
        self.checkBox_2.setGeometry(QtCore.QRect(120, 30, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setCheckable(True)
        self.checkBox_2.setChecked(True)
        self.checkBox_2.setAutoExclusive(True)
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.groupBox_4)
        self.checkBox_3.setGeometry(QtCore.QRect(240, 30, 101, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.checkBox_3.setFont(font)
        self.checkBox_3.setAutoExclusive(True)
        self.checkBox_3.setObjectName("checkBox_3")
        self.pushButton = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton.setGeometry(QtCore.QRect(330, 20, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_5.setGeometry(QtCore.QRect(730, 80, 461, 201))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setObjectName("groupBox_5")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_2.setGeometry(QtCore.QRect(360, 30, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 30, 331, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.graph = QtWidgets.QLabel(self.groupBox_5)
        self.graph.setEnabled(True)
        self.graph.setGeometry(QtCore.QRect(10, 70, 241, 121))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.graph.setFont(font)
        self.graph.setFrameShape(QtWidgets.QFrame.Box)
        self.graph.setText("")
        self.graph.setObjectName("graph")
        self.label_7 = QtWidgets.QLabel(self.groupBox_5)
        self.label_7.setGeometry(QtCore.QRect(264, 70, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.groupBox_5)
        self.label_8.setGeometry(QtCore.QRect(270, 100, 41, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_3.setEnabled(False)
        self.pushButton_3.setGeometry(QtCore.QRect(260, 130, 81, 61))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_4.setEnabled(False)
        self.pushButton_4.setGeometry(QtCore.QRect(360, 130, 81, 61))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_6.setGeometry(QtCore.QRect(320, 70, 131, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_7.setEnabled(False)
        self.lineEdit_7.setGeometry(QtCore.QRect(320, 100, 131, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 290, 93, 28))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_6.setGeometry(QtCore.QRect(1150, 290, 93, 28))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_7.setGeometry(QtCore.QRect(110, 290, 93, 28))
        self.pushButton_7.setObjectName("pushButton_7")
        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(0, 500, 1261, 71))
        self.line.setLineWidth(2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.nlock = QtWidgets.QLabel('',Dialog)
        self.nlock.move(500,0)
        
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Editor"))
        self.groupBox_2.setTitle(_translate("Dialog", "Show"))
        self.label_6.setText(_translate("Dialog", "answer:"))
        self.radioButton.setText(_translate("Dialog", "Opt1"))
        self.radioButton_2.setText(_translate("Dialog", "Opt2"))
        self.radioButton_3.setText(_translate("Dialog", "Opt3"))
        self.radioButton_4.setText(_translate("Dialog", "Opt4"))
        self.lineEdit_9.setText(_translate("Dialog", "setOpt"))
        self.label.setText(_translate("Dialog", "Code:"))
        self.label_2.setText(_translate("Dialog", "Scorr:"))
        self.label_3.setText(_translate("Dialog", "Type:"))
        self.label_4.setText(_translate("Dialog", "Do graph:"))
        self.label_5.setText(_translate("Dialog", "Condition"))
        self.groupBox.setTitle(_translate("Dialog", "Settings"))
        self.groupBox_3.setTitle(_translate("Dialog", "Question Text"))
        self.groupBox_4.setTitle(_translate("Dialog", "Question type"))
        self.checkBox.setText(_translate("Dialog", "Test"))
        self.checkBox_2.setText(_translate("Dialog", "Anatomical"))
        self.checkBox_3.setText(_translate("Dialog", "T/F"))
        self.pushButton.setText(_translate("Dialog", "set"))
        self.groupBox_5.setTitle(_translate("Dialog", "graphy"))
        self.pushButton_2.setText(_translate("Dialog", "add"))
        self.lineEdit_5.setText(_translate("Dialog", "Adress"))
        self.label_7.setText(_translate("Dialog", "move:"))
        self.label_8.setText(_translate("Dialog", "size:"))
        self.pushButton_3.setText(_translate("Dialog", "set"))
        self.pushButton_4.setText(_translate("Dialog", "delete"))
        self.lineEdit_6.setText(_translate("Dialog", "x,y"))
        self.lineEdit_7.setText(_translate("Dialog", "x,y"))
        self.pushButton_5.setText(_translate("Dialog", "End Project"))
        self.pushButton_6.setText(_translate("Dialog", "Next Question"))
        self.pushButton_7.setText(_translate("Dialog", "Cancel"))
        self.pushButton_4.clicked.connect(self.dlt)
        self.plainTextEdit_3.setReadOnly(True)
        self.plainTextEdit_2.textChanged.connect(self.Try)
        self.radioButton.close()
        self.radioButton_2.close()
        self.radioButton_3.close()
        self.radioButton_4.close()
        self.lineEdit_9.close()
        self.checkBox.stateChanged.connect(self.setTest)
        self.checkBox_2.stateChanged.connect(self.setAnatomi)
        self.checkBox_3.stateChanged.connect(self.setGuessy)
        self.pushButton_2.clicked.connect(self.addGrph)
        self.pushButton_3.clicked.connect(self.setimage)
        self.lineEdit_5.textChanged.connect(self.andyG)
        self.lineEdit_9.textChanged.connect(self.setOpt)
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_2.textChanged.connect(self.moveScorr)
        self.numbCode = 1
        x_move = '0'
        y_move = '0'
        x_size = '0'
        y_size = '0'
        from random import randint as rt
        self.codeLevel1 = rt(1001,9009)
        self.back = brahan('w')
        with open('NewRound.tm')as y:
            self.send = y.read()
        
        self.back.NamedVar({'Name'},{self.send})
        self.back.Addset('Type', 'Anatomical')
        self.back.Addset('ans', '')
        self.back.Addset('Que', '')
        self.back.Addset('Scorr', '0')
        self.back.Addset('graphy',['',x_move,y_move,x_size,y_size])
        self.back.Addset('Code',self.codeLevel1*25//3+self.numbCode)
        self.back.Show()
        self.lineEdit.setText(str(self.back.Open('Code')))
        self.lineEdit_2.setText(str(self.back.Open('Scorr')))
        self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
        self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
        self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
        self.namsOpt = ['Op1','Op2','Opt3','Opt4']
        self.radioButton.clicked.connect(self.Opt1)
        self.radioButton_2.clicked.connect(self.Opt2)
        self.radioButton_3.clicked.connect(self.Opt3)
        self.radioButton_4.clicked.connect(self.Opt4)
        self.lineEdit_8.textChanged.connect(self.setAns)
        self.ezed = True
        self.pushButton_6.clicked.connect(self.Next)
        with open('backSpider.txt','w')as io:
            io.write('')
    def setOpt(self):
        ueal = self.lineEdit_9.text()
        if ueal[:2] == '1.':
            if ueal[-1] == '/':
                ueal = ueal[2:-1]
                self.radioButton.setText(ueal)
                self.lineEdit_9.clear()
                self.namsOpt[0] = ueal
                op = self.back.Open('ans')
                op['o1'] = self.namsOpt[0]
                self.back.Replace('ans', op)
                self.change = self.back.Open('ans')
                print(self.namsOpt)
                self.lineEdit.setText(str(self.back.Open('Code')))
                self.lineEdit_2.setText(str(self.back.Open('Scorr')))
                self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
                self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
                self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            else:
                self.radioButton.setText(ueal)
        if ueal[:2] == '2.':
            if ueal[-1] == '/':
                ueal = ueal[2:-1]
                self.radioButton_2.setText(ueal)
                self.lineEdit_9.clear()
                self.namsOpt[1] = ueal
                op = self.back.Open('ans')
                op['o2'] = self.namsOpt[1]
                self.back.Replace('ans', op)
                self.lineEdit.setText(str(self.back.Open('Code')))
                self.lineEdit_2.setText(str(self.back.Open('Scorr')))
                self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
                self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
                self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            else:
                self.radioButton_2.setText(ueal)
        if ueal[:2] == '3.':
            if ueal[-1] == '/':
                ueal = ueal[2:-1]
                self.radioButton_3.setText(ueal)
                self.lineEdit_9.clear()
                self.namsOpt[2] = ueal
                op = self.back.Open('ans')
                op['o3'] = self.namsOpt[2]
                self.back.Replace('ans', op)
                self.lineEdit.setText(str(self.back.Open('Code')))
                self.lineEdit_2.setText(str(self.back.Open('Scorr')))
                self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
                self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
                self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            else:
                self.radioButton_3.setText(ueal)
        if ueal[:2] == '4.':
            if ueal[-1] == '/':
                ueal = ueal[2:-1]
                self.radioButton_4.setText(ueal)
                self.lineEdit_9.clear()
                self.namsOpt[3] = ueal
                op = self.back.Open('ans')
                op['o4'] = self.namsOpt[3]
                self.back.Replace('ans', op)
                self.lineEdit.setText(str(self.back.Open('Code')))
                self.lineEdit_2.setText(str(self.back.Open('Scorr')))
                self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
                self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
                self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            else:
                self.radioButton_4.setText(ueal)
    
    def Next(self):
        note = self.back.Open('Type')
        ans = self.back.Open('ans')
        if note == 'Test':
            dicts = self.back.Open('ans')
            dicts1 = [dicts['o1'],dicts['o2'],dicts['o3'],dicts['o4'],dicts['c']]
            
            if dicts['c'] == 'None':
                self.nlock.setText('Your test not answer.')
                self.nlock.resize(300,40)
                return 'h'
            
            ans = '--'.join(dicts1)
    
        
        type_ = self.back.Open('Type')
        
        scorr = self.back.Open('Scorr')
        graph = self.back.Open('graphy')
        graph = '--'.join(graph)
        Ques = self.back.Open('Que')
        dnv = f"{type_}**\n{scorr}**\n{Ques}**\n{ans}**\n{graph}**\n]#%>>**\n"
        with open('NewRound.tm')as tmr:
            self.tmr = tmr.read()
        print(tmr)
        
        with open('backSpider.txt','a')as io:
            io.write(dnv)
        self.plainTextEdit.clear()
        self.plainTextEdit_2.clear()
        self.plainTextEdit_3.clear()
        
        self.back = brahan('w')
        self.pushButton_5.clicked.connect(self.End)
        self.lineEdit_4.clear()
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_7.setEnabled(False)
        self.lineEdit_8.clear()
        self.lineEdit_9.clear()
        self.lineEdit_5.setText('adress')
        self.lineEdit_6.setText('x,y')
        self.lineEdit_7.setText('x,y')
        self.pushButton_3.setEnabled(False)
        self.pushButton_4.setEnabled(False)
        x_move = '0'
        y_move = '0'
        x_size = '0'
        y_size = '0'
        self.back.NamedVar({'Name'},{self.send})
        self.back.Addset('Type', type_)
        self.back.Addset('ans', '')
        if type_ == 'Test':
            self.back.Replace('ans', {'o1':self.namsOpt[0],'o2':self.namsOpt[1],'o3':self.namsOpt[2],'o4':self.namsOpt[3],'c':'None'})
        self.back.Addset('Que', '')
        self.back.Addset('Scorr', '0')
        self.numbCode += 1
        self.back.Addset('graphy',['',x_move,y_move,x_size,y_size])
        self.back.Addset('Code',self.codeLevel1*25//3+self.numbCode)
        self.lineEdit.setText(str(self.back.Open('Code')))
        self.IMAGE.clear()
        self.ezed = False
        self.back.Show()

    
    def Try(self):
        text = self.plainTextEdit_2.toPlainText()
        self.plainTextEdit_3.setPlainText(text)
        self.back.Replace('Que', text)
        self.lineEdit.setText(str(self.back.Open('Code')))
        self.lineEdit_2.setText(str(self.back.Open('Scorr')))
        self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
        self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
        self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
    def setAns(self):
        text = self.lineEdit_8.text()
        try:
            self.back.Replace('ans',f'{text}')
        
            self.lineEdit.setText(str(self.back.Open('Code')))
            self.lineEdit_2.setText(str(self.back.Open('Scorr')))
            self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
            self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
            self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
        except:
            w = 'w'
    def dlt(self):
        self.lineEdit_5.clear()
        self.lineEdit_6.setText('x,y')
        self.lineEdit_7.setText('x,y')
    def Opt1(self):
        newl = self.back.Open('ans')
        newl['c'] = newl['o1']
        print(newl)
        self.back.Replace('ans', newl)
        self.back.Replace('Type', 'Test')
        self.lineEdit.setText(str(self.back.Open('Code')))
        self.lineEdit_2.setText(str(self.back.Open('Scorr')))
        self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
        self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
        self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
    def Opt2(self):
         newl = self.back.Open('ans')
         newl['c'] = newl['o2']
         print(newl)
         self.back.Replace('ans', newl)
         self.back.Replace('Type', 'Test')
         self.lineEdit.setText(str(self.back.Open('Code')))
         self.lineEdit_2.setText(str(self.back.Open('Scorr')))
         self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
         self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
         self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
    def Opt3(self):
         newl = self.back.Open('ans')
         newl['c'] = newl['o3']
         print(newl)
         self.back.Replace('ans', newl)
         self.back.Replace('Type', 'Test')
         self.lineEdit.setText(str(self.back.Open('Code')))
         self.lineEdit_2.setText(str(self.back.Open('Scorr')))
         self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
         self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
         self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
    def Opt4(self):
         newl = self.back.Open('ans')
         newl['c'] = newl['o4']
         print(newl)
         self.back.Replace('ans', newl)
         self.back.Replace('Type', 'Test')
         self.lineEdit.setText(str(self.back.Open('Code')))
         self.lineEdit_2.setText(str(self.back.Open('Scorr')))
         self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
         self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
         self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
        
    def moveScorr(self):
        tm = []
        text = self.lineEdit_2.text()
        sentCom = list(text)
        number = '1','2','3','4','5','6','7','8','9','0','.'
        for it in sentCom:
            if it in number:
                tm.append(it)
        self.lineEdit_2.setText(''.join(tm))
        self.back.Replace('Scorr', ''.join(tm))
        self.lineEdit.setText(str(self.back.Open('Code')))
        self.lineEdit_2.setText(str(self.back.Open('Scorr')))
        self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
        self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
        self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
    def setTest(self):
        if self.ezed == True:
            self.back.Replace('Type', 'Test')
            self.back.Replace('ans', {'o1':self.namsOpt[0],'o2':self.namsOpt[1],'o3':self.namsOpt[2],'o4':self.namsOpt[3],'c':'None'})
            self.lineEdit.setText(str(self.back.Open('Code')))
            self.lineEdit_2.setText(str(self.back.Open('Scorr')))
            self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
            self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
            self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            self.lineEdit_8.close()
            self.radioButton.show()
            self.radioButton_2.show()
            self.radioButton_3.show()
            self.radioButton_4.show()
            self.lineEdit_9.show()
    def setAnatomi(self):
        if self.ezed == True:
            self.back.Replace('Type', 'Anatomical')
            self.back.Replace('ans', '')
            self.lineEdit.setText(str(self.back.Open('Code')))
            self.lineEdit_2.setText(str(self.back.Open('Scorr')))
            self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
            self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
            self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            self.lineEdit_8.show()
            self.radioButton.close()
            self.radioButton_2.close()
            self.radioButton_3.close()
            self.radioButton_4.close()
            self.lineEdit_9.close()
            self.back.Replace('ans','')
    def setGuessy(self):
        if self.ezed == True:
            self.back.Replace('Type', 'Guessy')
            self.back.Replace('ans', '')
            self.lineEdit.setText(str(self.back.Open('Code')))
            self.lineEdit_2.setText(str(self.back.Open('Scorr')))
            self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
            self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
            self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
            self.lineEdit_8.show()
            self.radioButton.close()
            self.radioButton_2.close()
            self.radioButton_3.close()
            self.radioButton_4.close()
            self.lineEdit_9.close()
            self.back.Replace('ans','')
    def addGrph(self):
        self.IMAGE.setText('Add an image')
        self.lineEdit_5.setEnabled(True)
        self.lineEdit_6.setEnabled(True)
        self.lineEdit_7.setEnabled(True)
        self.pushButton_3.setEnabled(True)
        self.pushButton_4.setEnabled(True)
    def andyG(self):
        adress = self.lineEdit_5.text()
        pixel = QtGui.QPixmap(adress)
        self.graph.setScaledContents(True)
        self.graph.setPixmap(pixel)
    def setimage(self):
        adress = self.lineEdit_5.text()
        xy = self.lineEdit_6.text()
        x,y = xy.split(',')
        try:
            print(x,y)
            maps = QtGui.QPixmap(adress)
            self.IMAGE.setPixmap(maps)
            self.IMAGE.setScaledContents(True)
            x_ = int(x) + 10
            y_ = int(y) + 140
            if x_ >= 590 and y_ >= 360:
                x_,y_ = 590,360
            self.IMAGE.move(int(x_),int(y_))
            xy = self.lineEdit_7.text()
            x,y = xy.split(',')
            if int(x) >= 600 and int(y) >= 300:
                x,y = 600,300
            print(x,y)
            self.IMAGE.resize(int(x),int(y))
            self.back.Replace('graphy',[adress,str(x_),str(y_),str(x),str(y)])
            self.lineEdit.setText(str(self.back.Open('Code')))
            self.lineEdit_2.setText(str(self.back.Open('Scorr')))
            self.lineEdit_3.setText(''.join((self.back.Open('Type'))))
            self.lineEdit_4.setText('/'.join((self.back.Open('graphy'))))
            self.plainTextEdit.setPlainText(f"{'  '.join(self.back.Keys())}\n{self.back.Vals()}")
        except:
            from Out import Ui_Dialog
            ic = Ui_Dialog()
            diaer = QtWidgets.QDialog()
            ic.setupUi(diaer)
            ic.label.setText('Erorr:Erorr in image form')
            ic.pushButton.clicked.connect(diaer.close)
            diaer.exec_()
        
    def End(self):
        sett = set()
        with open('backSpider.txt') as ro:
            self.UpFile = ro.read()
        with open('NewRound.tm')as tmr:
            self.tmr = tmr.read()
        sett.add(f'{self.tmr}*%!')
        with open(f'Ques/Azmoon/{self.tmr}.tm','w')as w:
            w.write(self.UpFile)
        with open('round.txt')as rod:
            self.rod = rod.read()
        with open('round.txt','w')as rw:
            rw.write(f'{int(self.rod) + 1}')
        from Message import Ui_Dialog
        msg = Ui_Dialog()
        diang = QtWidgets.QDialog()
        msg.setupUi(diang)
        msg.pushButton.clicked.connect(lambda : diang.close())
        diang.exec_()
        with open('Uper/List Azmax.txt','a') as ex:
            k = list(sett)
            ex.write(k[0])
        sett.clear()
        
        return
        